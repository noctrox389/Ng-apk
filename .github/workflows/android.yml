name: Build APK

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip autoconf automake libtool pkg-config zlib1g-dev
        pip install buildozer

    - name: Build APK
      run: |
        buildozer init || true
        buildozer -v android debug
        mv bin/*.apk .

    - name: Install Android SDK & Tools
      run: |
        sudo apt-get install -y openjdk-11-jdk wget unzip
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        sudo mkdir -p /usr/local/android-sdk/cmdline-tools
        sudo unzip -q cmdline-tools.zip -d /usr/local/android-sdk/cmdline-tools
        export ANDROID_HOME=/usr/local/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/cmdline-tools/bin:$ANDROID_HOME/platform-tools:$PATH
        yes | $ANDROID_HOME/cmdline-tools/cmdline-tools/bin/sdkmanager --licenses
        $ANDROID_HOME/cmdline-tools/cmdline-tools/bin/sdkmanager "platform-tools" "platforms;android-30" "emulator" "system-images;android-30;google_apis;x86"

    - name: Create & Launch AVD
      run: |
        export ANDROID_HOME=/usr/local/android-sdk
        export PATH=$ANDROID_HOME/cmdline-tools/cmdline-tools/bin:$ANDROID_HOME/platform-tools:$PATH
        echo "no" | avdmanager create avd -n test_avd -k "system-images;android-30;google_apis;x86" --force
        $ANDROID_HOME/emulator/emulator -avd test_avd -no-audio -no-window &
        $ANDROID_HOME/platform-tools/adb wait-for-device
        $ANDROID_HOME/platform-tools/adb shell 'while [[ "$(getprop sys.boot_completed)" != "1" ]]; do sleep 1; done'

    - name: Run on Emulator
      run: |
        export ANDROID_HOME=/usr/local/android-sdk
        export PATH=$ANDROID_HOME/platform-tools:$PATH
        adb install -r *.apk
        adb shell am start -n org.noctrox.spriteprocessor/org.kivy.android.PythonActivity

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: SpriteProcessor
        path: "*.apk"
